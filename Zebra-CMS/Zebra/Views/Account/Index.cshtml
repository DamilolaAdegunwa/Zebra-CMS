@model Zebra.DataRepository.Models.User
<div class="zebra-container">
    <h1>Zebra CMS</h1>
    @using (Html.BeginForm("Validate", "Account"))
    {
        @Html.AntiForgeryToken()

        <div class="zebra-login">
            <h3>Enter login details</h3>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="editor-login">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="editor-login">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="hidden" name="returnUrl" id="returnUrl" value="@TempData["returnurl"]" />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Log In" class="btn btn-default" />
                </div>
            </div>
        </div>

    }
</div>
<style>
    .zebra-container{
        height:100%;
        width:180px;
        margin: 0 auto;

    }
    .zebra-login{
            margin: 0 auto;
            width: 200px;
            border-style: outset;
            padding: 20px;
    }


</style>