@{
    ViewBag.Title = "PageDesigner";
    Layout = "~/Views/Shared/EditorLayout.cshtml";
}
@model string
@{ 
    var data = Model;
    var nodepath = ViewBag.NodePath;
}
<div id="outer-container" class="outer-container">
    <input type="button" class="designer-add-container" value="Add Container"/>
    <input type="button" class="designer-add-action" value="Add Action" />
    <input type="button" class="designer-save-design" value="Save Design" />

</div>


<div class="outer-container-sample">
    <input type="button" class="designer-add-container" value="Add Container" />
    <input type="button" class="designer-add-action" value="Add Action" />
    <input type="button" class="designer-remove-container" value="Remove Container" />
    <input type="text" class="designer-container-class-name" placeholder="Container Class Name" />
</div>

<div class="datasource-container-sample">
    <span data-datasourceid=''><label>Datasource: </label><text><input type='button' class='designer-attach-datasource' value='Attach Datasource'></text></span>
</div>

<script>
    var nodepath = "@nodepath";
    var designerdata = JSON.parse("@data".replace(/&quot;/g, '\"'));
    console.log(JSON.stringify(designerdata));
    var parentcontainer = $('#outer-container');
    for (var i = 0; i < designerdata.length; i++) {
        if (designerdata[i]["iscontainer"]) {
            var childcontainer = AddContainer(parentcontainer, designerdata[i]["containerclass"]);
            var childdata = designerdata[i].children;
            TraverseChildren(childcontainer, childdata);
        }
        else
        {
            var id = designerdata[i]['actionid'];
            var name = designerdata[i]['actionname'];
            var datasourceid = designerdata[i]['datasourceid'];
            var datasourcename = designerdata[i]['datasourcename'];
            AddActionContainer(parentcontainer, id, name, datasourceid, datasourcename);
        }
    }

    function AddContainer(parent, classname) {
        var newcontainer = $('.outer-container-sample').clone();
        newcontainer.attr('class', 'outer-container');
        if (classname != undefined)
        {
            $(newcontainer).children('input.designer-container-class-name')[0].value = classname;
        }
        $(newcontainer).appendTo(parent);
        var depth = $(newcontainer).parents('.outer-container').length;
        $(newcontainer).prepend('<p>Depth: ' + depth + '</p>');
        return $(newcontainer);
    }

    function TraverseChildren(currentcontainer, currentdata) {
        for (var i = 0; i < currentdata.length; i++) {
            if (currentdata[i]["iscontainer"]) {
                var childcontainer = AddContainer(currentcontainer, currentdata[i]["containerclass"]);
                var childdata = currentdata[i].children;
                TraverseChildren(childcontainer, childdata);
            }
            else {
                var id = currentdata[i]['actionid'];
                var name = currentdata[i]['actionname'];
                var datasourceid = currentdata[i]['datasourceid'];
                var datasourcename = currentdata[i]['datasourcename'];
                AddActionContainer(currentcontainer, id, name, datasourceid, datasourcename);
            }
        }
    }


    $(document).on('click', '.designer-add-container', function () {
        var parent = this.parentElement;
        AddContainer(parent);
    });



    $(document).on('click', '.designer-add-action', function () {
        var parent = this.parentElement;
        ShowModelTreePopup('40feaa0d-4c88-4517-8297-5e21c5b06e21', '', '', '', function () { AddAction(parent, $(GetSelectedNodeInPopup())) });
    });

    function AddAction(parentcontainer, node)
    {
        var nodename = $(node).find('p')[0].innerHTML;
        var nodeid = node.attr('data-nodeid');
        AddActionContainer(parentcontainer, nodeid, nodename);
    }

    function AddActionContainer(parentcontainer, nodeid, nodename, datasourceid, datasourcename)
    {
        var action = "<div class='designer-action-container' data-nodeid='" + nodeid + "'><span><p>" + nodename + "<i class='fa fa-window-close-o action-remove'></i></p></span></div>";
        var $action = $(action);
        //$(action).appendTo(parentcontainer);
        AddDatasourceContainer($action, datasourceid, datasourcename);
        $(parentcontainer).append($action);
    }

    function AddDatasourceContainer(actioncontainer, datasourceid, datasourcename)
    {
        var datasourcecontainer = "";
        if (datasourceid != undefined && datasourceid != '') {
            datasourcecontainer = "<span data-datasourceid=" + datasourceid + "><label>Datasource: </label><text>" + datasourcename + "</text><i class='fa fa-window-close-o datasource-remove'></i></span>";
        }
        else {
            datasourcecontainer = $('.datasource-container-sample span').clone();
        }
        $(actioncontainer).append(datasourcecontainer);
    }

    //remove action
    $(document).on('click', '.designer-action-container i.action-remove', function () {
        $(this.parentElement.parentElement.parentElement).remove();
    });

    //remove datasource
    $(document).on('click', '.designer-action-container i.datasource-remove', function () {
        var actioncontainer = this.parentElement.parentElement;
        $(this.parentElement).remove();
        AddDatasourceContainer(actioncontainer);
    });

    $(document).on('click', '.designer-remove-container', function () {
        $(this.parentElement).remove();
    });

    $(document).on('click', '.designer-attach-datasource', function () {
        var btn = this;
        var para = btn.parentElement;
        var span = para.parentElement;
        var action = span.parentElement;
        ShowModelTreePopup('', '', '', '', function () {
            var node = $(GetSelectedNodeInPopup());
            var nodename = $(node).find('p')[0].innerHTML;
            var nodeid = node.attr('data-nodeid');
            $(span).remove();
            //  $(para).append(nodename);
            AddDatasourceContainer(action, nodeid, nodename);
            //$(span).attr('data-datasourceid', nodeid);
        });
    });

    $(document).on('click', '.designer-save-design', function () {
        var outercontainer = this.parentElement;
        var childdiv = $(outercontainer).children('div');
        var data = [];
        data = GetAllChildren(outercontainer);
        console.log(JSON.stringify(data));

        var formdata = {};
        formdata['nodeid'] = '@ViewBag.NodeId';
        formdata['@ViewBag.DesignerDetailFieldId'] = JSON.stringify(data);
        formdata['nodelanguageid'] = '@ViewBag.DefaultLanguageId';
        var ajaxRequest = $.ajax({
            type: "POST",
            url: "/zebraapi/nodeservice/savenode",
            data: formdata,
            success(data) {
                formdata = {};
                formdata['key'] = nodepath;
                var ajaxRequest = $.ajax({
                    type: "POST",
                    url: "/zebraapi/cacheservice/remove",
                    data: formdata,
                    success(data) {
                        alert('Saved');
                    }
                });
            }
        });
        ajaxRequest.done(function (data, textStatus, jqXHR) {

        });
        event.preventDefault();
    });

    function GetAllChildren(container)
    {
        var child = $(container).children('div');
        var data = [];
        for(var i = 0; i < child.length; i++)
        {
            var id = $(child[i]).attr('data-nodeid');
            var tmp = {};
            if (id == undefined) {
                var classname = $(child[i]).children('input.designer-container-class-name')[0].value;
                tmp['iscontainer'] = true;
                if (classname != undefined || classname != '')
                    tmp['containerclass'] = classname;
            }
            else {
                var actionspan = $(child[i]).children()[0];
                var actionname = $(actionspan).children()[0].innerText;
                var datasourcespan = $(child[i]).children()[1];
                var datasourceid = $(datasourcespan).attr('data-datasourceid');
                var datasourcename = undefined;
                if (datasourceid != undefined && datasourceid != '') {
                    datasourcename = $(datasourcespan).children('text')[0].innerText;
                }
                tmp['iscontainer'] = false;
                tmp['actionid'] = id;
                tmp['actionname'] = actionname;
                tmp['datasourceid'] = datasourceid;
                tmp['datasourcename'] = datasourcename;
            }
            tmp['children'] = GetAllChildren(child[i]);
            data.push(tmp);
        }
        return data;
    }

</script>

<style>
    .outer-container-sample{
        display: none;
    }

    .outer-container{
        display: block;
        border: ridge;
        padding: 10px;
    }

    .designer-action-container{
        margin: 5px;
        border: groove;
    }

    .datasource-container-sample{
        display: none;
    }

</style>




