@using Zebra.DataRepository.Models
@model List<Zebra.DataRepository.Models.Node>

@{
    Layout = null;
} 

    <div class="content-tree">
        <div class="content-tree-search">
            <input class="content-tree-search-text" type="text" placeholder="Search node..."/><i class="content-node-search-btn fa fa-search" onclick="javascript:SearchNode(this)"></i>
        </div>
        <div class="content-tree-search-result">
        </div>
        <div class="content-tree-nodes">
            @foreach (var node in Model)
            {
                <div class="content-node" data-nodeid="@node.Id" node-expanded="false">
                    <span class="node-icon-container"><i class="fa fa-plus-square-o"></i></span>
                    <p>@node.NodeName</p>
                </div>

            }
        </div>
    </div>

<script>
    function SearchNode(e) {
        var txt = $(e.parentElement).find('.content-tree-search-text').val();
        if (txt !== null && txt.length > 0) {
            $.get("./NodeSearchResult?nameorid=" + txt, function (data) {
                $(".content-tree-search-result").show();
                $(".content-tree-search-result").html(data);
                $(".content-tree-nodes").hide();
            });
        }
        else {
            $(".content-tree-search-result").hide();
            $(".content-tree-nodes").show();
        }
    }

</script>



<style>
    .context-menu {
        border: 1px solid black;
        z-index: 1000;
        position: absolute;
        background-color: #feffff;
    }

    .content-tree-search {
        display: flex;
    }

    .node-icon-container{
        float: left;
        font-size: 12px;
        padding: 3px;
    }

    .content-tree-search-text {
        width: 100%;
        padding: 3px;
    }

    .content-node-search-btn {
        position: absolute;
        padding: 3px;
        right: 1px;
        background-color: white;
        align-self: center;
    }

        .context-menu ul {
            list-style: none;
            margin: 0 auto;
            padding-left: 1px;
            padding-right: 1px;
        }

        .context-menu li:hover {
            background: #ced9ea;
        }


    .content-tree {
        display: table-cell;
        width:300px;
        border-style: groove;
    }

    .content-tree-nodes{
        min-height: calc(100vh - 190px);
        max-height: calc(100vh - 190px);
        overflow-x: auto; 
    }
   
    .content-tree-search-result{
        display: none;
        min-height: calc(100vh - 190px);
        max-height: calc(100vh - 190px);
        overflow-x: auto;
    }

    body{
        margin: 0px;
        overflow: hidden;
    }

    header, footer{
        height:25px;
        width:100%;
        background-color: black;
    }
   
    .editor-container{
        display:block;
        height:100%;
    }

    .zebra-container{
        height:100%;
        margin:8px;
    }

    .item-container {
        display: table-cell;
         /*width:50%;*/
        border: groove;
        overflow-y: auto;
    }

    .tree-container{
        display:table;
        width:100%;
        /*min-height:600px;*/
        overflow-y: auto;
    }

    .model-dialog{
        border-style: solid;
    }

     .menu {
        border-style: groove;
        height: 100px;
    }

    .black-overlay {
        top: 0;
        position: fixed;
        width: 100%;
        height: 100%;
        z-index:10;
        background-color: rgba(1, 0, 0, 0.4);
        text-align:center;
    }

    .model-tree-popup {
        border-style: solid;
        background: white;
        position: fixed;
        top: 50%;
        left:50%;
        margin-left:-350px;
        margin-top:-200px;
        width: 700px;
        height: 400px;
        z-index:100;
    }

    .model-popup-buttons{
        position: absolute;
        bottom: 0;
        margin: 25px;
        right: 0;
        z-index: 10;
    }

</style>

<script>
    //$(document).on('click', '.close-button', function (e) {
    //    $(".zebra-fieldbuilder-container").remove();
    //    $('.black-overlay').remove();
    //});

    //$(document).on('click', '.remove-field-button', function (e) {
    //    var fielddiv = $(e.target).parent();
    //    $(fielddiv).remove();
    //});

    //$(document).on('click', '.save-field-button', function (e) {
    //    debugger;
    //    var typesarr = $('.fields-fieldbuilder .field select');
    //    var namesarr = $('.fields-fieldbuilder .field .fieldname input');
    //    var propertyarr = $('.fields-fieldbuilder .field .fieldproperty input');
    //    formdata = [];
    //    fieldsdata = [];
    //    template = {}
    //    template["templatenodeid"] = $(ZebraEditor_currentnode.element.parentElement).attr("data-nodeid");
    //    fieldsdata.push(template);
    //    for (i = 0; i < namesarr.length; i++) {
    //        field = {}
    //        field["name"] = namesarr[i].value;
    //        field["id"] = namesarr[i].id;
    //        field["typeid"] = typesarr[i].value;
    //        field["isstatic"] = propertyarr[i].value;
    //        fieldsdata.push(field);
    //    }
    //    fullyqualifiedname = {};
    //    fullyqualifiedname["fullyqualifiedname"] = "Zebra.Utilities.UtilityProcessor.FieldBuilderUtility,Zebra";
    //    methodname = {};
    //    methodname["methodname"] = "Process";
    //    formdata.push(fullyqualifiedname);
    //    formdata.push(methodname);
    //    formdata.push(fieldsdata);


    //    console.log(formdata);

    //    $.ajax({
    //        type: "POST",
    //        url: "/zebraapi/UtilityService/InvokeMethod",
    //        data: { '': JSON.stringify(formdata) },
    //        dataType: "json",
    //        async: true,
    //        success: function (json) {
    //            alert("Field Created ");
    //            console.log(json);
    //        },
    //        error: function (e) {
    //            console.log(e);
    //        }
    //    });
    //    $(".zebra-fieldbuilder-container").remove();
    //    $('.black-overlay').remove();
    //    if (ZebraEditor_currentnode.element != null) {
    //        LoadNodeBrowser($(ZebraEditor_currentnode.element.parentElement).attr('data-nodeid'), 'test', 'test', 'test');
    //    }
    //});

    //$(document).on('click', '.add-field-button', function (e) {
    //    $('.fields-fieldbuilder').append($('.field-sample').clone().attr('class', 'field'));
    //});
    //$(document).on('mouseup', function (e) {
    //    var fields = $('.zebra-fieldbuilder .field');

    //    for (var i = 0; i < fields.length; i++) {
    //        if ($(fields[i]).find('input').val() == '' && $(event.target.parentElement).attr('class') != 'field') {
    //            $(fields[i]).remove();
    //        }
    //    }
    //});

</script>
