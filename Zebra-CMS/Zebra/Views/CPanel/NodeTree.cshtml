@using Zebra.DataRepository.Models
@model List<Zebra.DataRepository.Models.Node>

@{
    Layout = null;
} 

    <div class="content-tree">
        @foreach (var node in Model)
        {
            <div class="content-node" data-nodeid="@node.Id" node-expanded="false">
                <span></span>
                <p>@node.NodeName</p>
            </div>

        }
    </div>

@Html.ActionLink("Download", "NodeTree", new { nodeid = "00000000-0000-0000-0000-000000000000" },
                                         new { @class = "dialog" })



<script type="text/javascript">
    //$(function (){
    //    $('a.dialog').click(function() {
    //        var url = $(this).attr('href');
    //        var dialog = $('<div style="display:none"></div>').appendTo('body');
    //        dialog.load(url, {},
    //            function (responseText, textStatus, XMLHttpRequest) {
    //            dialog.dialog({
    //                close: function(event, ui) {
    //                    dialog.remove();
    //                }
    //            });
    //        });
    //        return false;
    //    });
    //});
</script>

<script type="text/javascript">

    //$(".content-node").on('click', function () {
    //    var parentid = $(event.target.parentElement).attr('data-nodeid');
    //    var currentnode = $(event.target.parentElement);
    //    if (currentnode.attr('node-expanded') === 'false') {
    //        currentnode.attr('node-expanded', 'true');
    //        GetChildNodesAndAppend(parentid, currentnode);
    //    }
    //    else {
    //        currentnode.find('div').remove();
    //        currentnode.attr('node-expanded', 'false');
    //    }

    //});


    //$(document).on('click', ".context-menu-option", function () {

    //    var option = $(event.target).attr("context-menu-option");
    //    switch(option)
    //    {
    //        case "Add Node":
    //            var nodename = prompt("Enter Node name", "Enter Node name");
    //            if (nodename !== null && nodename !== '') {
    //                var parentid = $(event.target.parentElement).attr("data-context-nodeid");
    //                var parentnode = $("[data-nodeid='" + parentid + "']");
    //                CreateNewNode(parentid, parentnode, nodename);
    //            }
    //            break;
    //        case "Delete Node":
    //            var nodeid = $(event.target.parentElement).attr("data-context-nodeid");
    //            var node = $("[data-nodeid='" + nodeid + "']");
    //            DeleteNode(nodeid, node);
    //            break;
    //    }
    //    $(".context-menu").remove();
    //});

    //$(".content-node").contextmenu(function (event) {
    //    event.preventDefault();
    //    var nodeid = $(event.target.parentElement).attr('data-nodeid');
    //    $("<div class='context-menu'><ul data-context-nodeid='" + nodeid + "'><li class='context-menu-option' context-menu-option='Add Node'>Add Node</li><li class='context-menu-option' context-menu-option='Delete Node'>Delete Node</li></ul></div>").css({ top: event.pageY + "px", left: event.pageX + "px" }).appendTo("body");
    //});

    //function GetChildNodesAndAppend(parentid, currentnode)
    //{
    //    $.ajax({
    //        url: "/zebraapi/nodeservice/getchildnodes?parentid=" + parentid,
    //        cache: false,
    //        dataType: "json",
    //        async: false,
    //        success: function (json) {

    //            json = $.parseJSON(json);
    //            for (var i = 0; i < json.length; i++) {
    //                $(currentnode).append(CreateNodeString(json[i]));
    //            }

    //        }
    //    });
    //}

    //function CreateNewNode(parentid, currentnode, nodename) {
    //    var nodeinfo = { parentid: parentid, nodename: nodename};
    //    $.ajax({
    //        type: "POST",
    //        url: "/zebraapi/nodeservice/createnode",
    //        cache: false,
    //        dataType: "json",
    //        data: JSON.stringify(nodeinfo),
    //        async: false,

    //        success: function (json) {

    //            json = $.parseJSON(json);
    //            //for (var i = 0; i < json.length; i++)
    //            {
    //                $(currentnode).append(CreateNodeString(json));
    //                $(currentnode).attr('node-expanded', 'true');
    //            }

    //        }
    //    });
    //}

    //function DeleteNode(nodeid, node) {
    //    var nodeinfo = { nodeid: nodeid };
    //    $.ajax({
    //        type: "POST",
    //        url: "/zebraapi/nodeservice/deletenode",
    //        cache: false,
    //        dataType: "json",
    //        data: JSON.stringify(nodeinfo),
    //        async: false,

    //        success: function (json) {
    //            if(json == true)
    //            {
    //                $(node).remove();
    //            }

    //        }
    //    });
    //}


    //function CreateNodeString(json)
    //{
    //    var node = "<div style='position:relative; margin:15px;' node-expanded='false' class='content-node' data-nodeid='" + json.Id + "'> <span></span> <p>" + json.NodeName + "</p> </div>";
    //    return node;
    //}



    //$(document).bind("mousedown", function (event) {
    //    if ($(event.target).attr("class") !== "context-menu-option") {
    //        event.preventDefault();
    //        $(".context-menu").remove();
    //    }

    //});


</script>

<style>
    .context-menu {
        border: 1px solid black;
        z-index: 1000;
        position: absolute;
        background-color: #feffff;
    }

        .context-menu ul {
            list-style: none;
            margin: 0 auto;
            padding-left: 1px;
            padding-right: 1px;
        }

        .context-menu li:hover {
            background: #ced9ea;
        }

    .content-tree {
        display: inline-block;
        width: 300px;
        border-style: groove;
    }

    .menu {
        border-style: groove;
        height: 100px;
    }

    .item-container {
        display: inline-block;
        border: groove;
    }
</style>
